generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(cuid())
  username String @unique
  email String @unique
  password String
  createdAt DateTime @default(now())
  profileImage String? 
  verifyCode String 
  verifyCodeExpiry DateTime @default(now())
  refreshToken String? 
  isVerified Boolean @default(false)
  documents Document[]
  isPro Boolean @default(false)
  subscription Subscription?
  freeAiTrials Int @default(10)
}
model Document {
  id String @id @default(cuid())
  title String 
  content Json? 
  icon String?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  user User @relation(fields: [userId],references: [id])
  userId String
  parent Document? @relation("SubPages",fields: [parentId],references: [id])
  children  Document[] @relation("SubPages")
  parentId String?
  isPublished Boolean @default(false)
  coverImage String?
  isTrashed Boolean @default(false)
  @@index([userId])
}
model Subscription {
  subscriptionId String @id
  userId String @unique
  user User @relation(fields: [userId],references: [id])
  status subscriptionStatus 
  aiCreditsLeft Int 
  createdAt DateTime @default(now())
  expiryDate DateTime? 
  nextBillingDate DateTime?
}

enum subscriptionStatus {
  active
  cancelled
  created
  pending
  expired
}